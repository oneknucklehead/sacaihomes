{% doc %}
  @prompt
    make me a collection list slider that shows 3 collections at a tmie, the sliding functionality is not smooth, make it infinitely scrollable, but i dont want it to scroll back entirely when the sliider reaches the ed of the collection list, please don't make it automatically slide
    
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-slider-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-collection-slider__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: 32px;
    padding: 0 20px;
  }

  .ai-collection-slider__heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
  }

  .ai-collection-slider__container-{{ ai_gen_id }} {
    position: relative;
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-collection-slider__viewport-{{ ai_gen_id }} {
    overflow: hidden;
    position: relative;
  }

  .ai-collection-slider__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.gap }}px;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .ai-collection-slider__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.gap }}px * 2)) / 3);
    min-width: 0;
  }

  .ai-collection-slider__card-{{ ai_gen_id }} {
    position: relative;
    display: block;
    text-decoration: none;
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    height: 100%;
  }

  .ai-collection-slider__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    padding-bottom: {{ block.settings.image_ratio }}%;
    overflow: hidden;
    background-color: #f4f4f4;
  }

  .ai-collection-slider__image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-slider__card-{{ ai_gen_id }}:hover .ai-collection-slider__image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-collection-slider__placeholder-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f4f4f4;
  }

  .ai-collection-slider__placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-collection-slider__content-{{ ai_gen_id }} {
    padding: 16px;
    text-align: {{ block.settings.text_alignment }};
    background-color: {{ block.settings.card_background }};
  }

  .ai-collection-slider__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0 0 8px;
    font-weight: 600;
  }

  .ai-collection-slider__count-{{ ai_gen_id }} {
    font-size: {{ block.settings.count_size }}px;
    color: {{ block.settings.count_color }};
    margin: 0;
  }

  .ai-collection-slider__controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 32px;
  }

  .ai-collection-slider__button-{{ ai_gen_id }} {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    border: 2px solid {{ block.settings.button_border_color }};
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_color }};
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-collection-slider__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
    color: {{ block.settings.button_hover_color }};
    border-color: {{ block.settings.button_hover_border }};
  }

  .ai-collection-slider__button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-collection-slider__button-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  @media screen and (max-width: 989px) {
    .ai-collection-slider__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ block.settings.gap }}px) / 2);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-collection-slider__slide-{{ ai_gen_id }} {
      flex: 0 0 100%;
    }

    .ai-collection-slider__heading-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.heading_size }}px * 0.8);
    }
  }
{% endstyle %}

<collection-slider-{{ ai_gen_id }} class="ai-collection-slider-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.heading != blank %}
    <div class="ai-collection-slider__header-{{ ai_gen_id }}">
      <h2 class="ai-collection-slider__heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    </div>
  {% endif %}

  <div class="ai-collection-slider__container-{{ ai_gen_id }}">
    <div class="ai-collection-slider__viewport-{{ ai_gen_id }}">
      <div class="ai-collection-slider__track-{{ ai_gen_id }}" data-track>
        {% if block.settings.collections != blank %}
          {% for collection in block.settings.collections %}
            <div class="ai-collection-slider__slide-{{ ai_gen_id }}">
              <a href="{{ collection.url }}" class="ai-collection-slider__card-{{ ai_gen_id }}">
                <div class="ai-collection-slider__image-wrapper-{{ ai_gen_id }}">
                  {% if collection.featured_image %}
                    <img
                      src="{{ collection.featured_image | image_url: width: 600 }}"
                      alt="{{ collection.featured_image.alt | escape }}"
                      class="ai-collection-slider__image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="600"
                      height="{{ 600 | times: block.settings.image_ratio | divided_by: 100 }}"
                    >
                  {% else %}
                    <div class="ai-collection-slider__placeholder-{{ ai_gen_id }}">
                      {{ 'collection-1' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                </div>
                <div class="ai-collection-slider__content-{{ ai_gen_id }}">
                  <h3 class="ai-collection-slider__title-{{ ai_gen_id }}">{{ collection.title }}</h3>
                  {% if block.settings.show_product_count %}
                    <p class="ai-collection-slider__count-{{ ai_gen_id }}">
                      {{ collection.products_count }}
                      {% if collection.products_count == 1 %}
                        product
                      {% else %}
                        products
                      {% endif %}
                    </p>
                  {% endif %}
                </div>
              </a>
            </div>
          {% endfor %}
        {% else %}
          {% for i in (1..6) %}
            <div class="ai-collection-slider__slide-{{ ai_gen_id }}">
              <div class="ai-collection-slider__card-{{ ai_gen_id }}">
                <div class="ai-collection-slider__image-wrapper-{{ ai_gen_id }}">
                  <div class="ai-collection-slider__placeholder-{{ ai_gen_id }}">
                    {{ 'collection-1' | placeholder_svg_tag }}
                  </div>
                </div>
                <div class="ai-collection-slider__content-{{ ai_gen_id }}">
                  <h3 class="ai-collection-slider__title-{{ ai_gen_id }}">Collection {{ i }}</h3>
                  {% if block.settings.show_product_count %}
                    <p class="ai-collection-slider__count-{{ ai_gen_id }}">0 products</p>
                  {% endif %}
                </div>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>

    <div class="ai-collection-slider__controls-{{ ai_gen_id }}">
      <button
        class="ai-collection-slider__button-{{ ai_gen_id }}"
        data-prev
        aria-label="Previous slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
      </button>
      <button
        class="ai-collection-slider__button-{{ ai_gen_id }}"
        data-next
        aria-label="Next slide"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </button>
    </div>
  </div>
</collection-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.isTransitioning = false;
      }

      connectedCallback() {
        this.track = this.querySelector('[data-track]');
        this.slides = Array.from(this.track.children);
        this.prevButton = this.querySelector('[data-prev]');
        this.nextButton = this.querySelector('[data-next]');
        
        if (this.slides.length === 0) return;

        this.slidesPerView = this.getSlidesPerView();
        this.totalSlides = this.slides.length;
        
        this.cloneSlides();
        this.setupEventListeners();
        this.updateSlider(false);

        window.addEventListener('resize', () => {
          this.handleResize();
        });
      }

      getSlidesPerView() {
        const width = window.innerWidth;
        if (width <= 749) return 1;
        if (width <= 989) return 2;
        return 3;
      }

      cloneSlides() {
        const clonesNeeded = this.slidesPerView * 2;
        
        for (let i = 0; i < clonesNeeded; i++) {
          const cloneStart = this.slides[i % this.totalSlides].cloneNode(true);
          const cloneEnd = this.slides[this.totalSlides - 1 - (i % this.totalSlides)].cloneNode(true);
          
          this.track.appendChild(cloneStart);
          this.track.insertBefore(cloneEnd, this.track.firstChild);
        }

        this.currentIndex = clonesNeeded;
        this.allSlides = Array.from(this.track.children);
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.prev());
        this.nextButton.addEventListener('click', () => this.next());
        
        this.track.addEventListener('transitionend', () => {
          this.isTransitioning = false;
          this.handleInfiniteLoop();
        });
      }

      handleResize() {
        const newSlidesPerView = this.getSlidesPerView();
        if (newSlidesPerView !== this.slidesPerView) {
          this.slidesPerView = newSlidesPerView;
          this.track.innerHTML = '';
          this.slides.forEach(slide => this.track.appendChild(slide));
          this.cloneSlides();
          this.updateSlider(false);
        }
      }

      next() {
        if (this.isTransitioning) return;
        this.isTransitioning = true;
        this.currentIndex++;
        this.updateSlider(true);
      }

      prev() {
        if (this.isTransitioning) return;
        this.isTransitioning = true;
        this.currentIndex--;
        this.updateSlider(true);
      }

      updateSlider(animate) {
        const slideWidth = this.allSlides[0].offsetWidth;
        const gap = {{ block.settings.gap }};
        const offset = -(this.currentIndex * (slideWidth + gap));
        
        if (animate) {
          this.track.style.transition = 'transform 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
        } else {
          this.track.style.transition = 'none';
        }
        
        this.track.style.transform = `translateX(${offset}px)`;
      }

      handleInfiniteLoop() {
        const clonesNeeded = this.slidesPerView * 2;
        
        if (this.currentIndex >= this.totalSlides + clonesNeeded) {
          this.currentIndex = clonesNeeded;
          this.updateSlider(false);
        } else if (this.currentIndex < clonesNeeded) {
          this.currentIndex = this.totalSlides + clonesNeeded - 1;
          this.updateSlider(false);
        }
      }
    }

    customElements.define('collection-slider-{{ ai_gen_id }}', CollectionSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection slider",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "Heading",
      "default": "Shop by collection"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "collection_list",
      "id": "collections",
      "label": "Collections",
      "limit": 12
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "Show product count",
      "default": true
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 800,
      "max": 1600,
      "step": 100,
      "unit": "px",
      "label": "Maximum width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "gap",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between slides",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_ratio",
      "min": 50,
      "max": 150,
      "step": 5,
      "unit": "%",
      "label": "Image aspect ratio",
      "default": 100
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "count_color",
      "label": "Product count",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Background",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Icon",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Border",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Hover background",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Hover icon",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "button_hover_border",
      "label": "Hover border",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Collection title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "count_size",
      "min": 10,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Product count size",
      "default": 14
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Collection slider"
    }
  ]
}
{% endschema %}
